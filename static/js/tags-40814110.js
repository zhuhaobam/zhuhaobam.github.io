import{X as o,af as i,U as r}from"./main-abb3ae7c.js";const{toString:c}=Object.prototype;function h(t,s){return c.call(t)===`[object ${s}]`}function l(t){return h(t,"String")}const d=["/404","/:id(\\d+)","/:all(.*)*","/login","/system/user","/system/setting"],p=["/drawing/drauu/:did(\\d+)"],T=o("tags",{state:()=>({tags:[],activeTag:""}),persist:{enabled:!0,strategies:[{storage:localStorage,paths:["tags","activeTag"]}]},getters:{hasEmpty(t){return t.tags.length===0},leastTwo(t){return t.tags.length>1},getActiveTag(t){return t.activeTag},getTags(t){return t.tags}},actions:{clear(){this.activeTag="",this.tags=[]},setActiveTag(t){this.activeTag=t},setTags(t){this.tags=i(t),console.log("setTags ",i(t))},addTag(t){let s="";if(p.includes(t.path)){const e=Object.fromEntries(Object.entries(t.params).map(([g,n])=>[g,n]));console.log("addtag params",e),l(e.did)&&(s=t.path.replace(":did(\\d+)",e.did))}else s=t.path;if(this.setActiveTag(s),d.includes(t.path)||this.tags.some(e=>e.path===s))return;const a=i(this.tags);a.push({...t,path:s}),this.setTags(a)},removeOtherTag(t){t!==this.activeTag&&r.push(t),this.setTags(this.tags.filter(s=>s.path===t))},removeTag(t){if(t===this.activeTag){const s=this.tags.findIndex(a=>a.path===t);s>0?r.push(this.tags[s-1].path):r.push(this.tags[s+1].path)}this.setTags(this.tags.filter(s=>s.path!==t))}}});export{T as u};
